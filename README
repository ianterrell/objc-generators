$ cat myapp.rb 
require 'sqlitepo-gen'

class Objects < SqlitePOGenerator
  project_name "MyApp"
  directory "myapp"
  author "Ian Terrell"
  
  persistent_object :user do |user|
    user.string :username
    user.integer :user_id
    user.belongs_to :group
    user.belongs_to :group, :name => :another_group
  end
end
$ ruby myapp.rb
$ cat myapp/User.h 
//
//  User.h
//  MyApp
//
//  Generated by Ian Terrell on 03/15/2009.
//  Copyright 2009 Ian Terrell. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "SQLitePersistentObject.h"

@class Group;

@interface User : SQLitePersistentObject {
  NSString *username;
  NSInteger userId;
  Group *group;
  Group *anotherGroup;
}

@property (nonatomic,readwrite,retain) NSString *username;
@property (nonatomic,readwrite) NSInteger userId;
@property (nonatomic,readwrite,retain) Group *group;
@property (nonatomic,readwrite,retain) Group *anotherGroup;

@end
$ cat myapp/User.m 
//
//  User.m
//  MyApp
//
//  Generated by Ian Terrell on 03/15/2009.
//  Copyright 2009 Ian Terrell. All rights reserved.
//

#import "User.h"

@implementation User

@synthesize username, userId, group, anotherGroup;

DECLARE_PROPERTIES(
  DECLARE_PROPERTY(@"username", @"@\"NSString\""),
  DECLARE_PROPERTY(@"userId", @"@\"NSInteger\""),
  DECLARE_PROPERTY(@"group", @"@\"Group\""),
  DECLARE_PROPERTY(@"anotherGroup", @"@\"Group\"")
)

- (void)dealloc
{
  [username release];
  [group release];
  [anotherGroup release];
	[super dealloc];
}

@end
