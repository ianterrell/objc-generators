//
//  <%= object.name %>.m
//  <%= @project_name %>
//
//  Generated by <%= @author %> on <%= Date.today.strftime("%m/%d/%Y") %>.
//  Copyright <%= Date.today.strftime("%Y") %> <%= @author %>. All rights reserved.
//

#import "<%= object.name %>.h"
#import "Frank.h"

@implementation <%= object.name %>

@synthesize <%= object.field_names.join(', ') %>;

<% object.methods.each do |method| -%>
<%= method[:signature] %> {
<%= method[:code] %>
}
<% end -%>

#pragma mark Create and Update

+(NSString *)tableName {
  return @"<%= object.table_name %>";
}

-(BOOL)save {
  NSString *sql = nil;
  if ([self isNewRecord])
    sql = @"INSERT INTO <%= object.table_name %> (<%= object.field_names.map{|x| x.underscore}.join(', ') %>) VALUES (<%= object.field_names.map{|x|'?'}.join(', ') %>);";
  else
    sql = [NSString stringWithFormat:@"UPDATE <%= object.table_name %> SET <%= object.field_names.map{|x|"#{x.underscore} = ?"}.join(', ') %> WHERE pk = %d;", [pk intValue]];

  FMDatabase *db = [Frank sharedDatabase];
  BOOL success = [db executeUpdate:sql, <%= object.field_names.map{|x|x.camelize(:lower)}.join(', ') %>];
  if (success)
    self.pk = [FrankObject lastInsertRowId];
  return success;
}

#pragma mark Helper Methods


+(id)buildFromResultSetRow:(FMResultSet *)rs {
  <%= object.name.camelize %> *<%= object.name.camelize(:lower) %> = [<%= object.name.camelize %> alloc];
  <%= object.name.camelize(:lower) %>.pk = [NSNumber numberWithInt:[rs intForColumn:@"pk"]];
<% object.fields.each do |field| -%>
  <%= object.name.camelize(:lower) %>.<%= field[:name] %> = <%= FrankObject.fmdb_column_value(field[:type], field[:name].underscore) %>;
<% end -%>
  return [<%= object.name.camelize(:lower) %> autorelease];
}

#pragma mark Boilerplate

- (void)dealloc {
<% object.fields.each do |field| -%>
  [<%= field[:name] %> release];
<% end -%>
	[super dealloc];
}

@end